{"ast":null,"code":"import _classCallCheck from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nvar Square =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Square, _React$Component);\n\n  function Square() {\n    _classCallCheck(this, Square);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Square).apply(this, arguments));\n  }\n\n  _createClass(Square, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return React.createElement(\"button\", {\n        className: \"square\",\n        onClick: function onClick() {\n          return _this.props.onClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, this.props.value);\n    }\n  }]);\n\n  return Square;\n}(React.Component);\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Board, _React$Component2);\n\n  /* To collect data from multiple children,\r\n  or to have two child components communicate with each other,\r\n  you need to declare the shared state in their parent component.\r\n  The parent component can pass the state back down to the children\r\n  by using props; this keeps the child components in sync with each other\r\n  and with the parent component */\n  function Board(props) {\n    var _this2;\n\n    _classCallCheck(this, Board);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this2.state = {\n      square: Array(9).fill(null)\n    };\n    return _this2;\n  }\n\n  _createClass(Board, [{\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this3 = this;\n\n      return React.createElement(Square //we’re passing down two props from Board to Square\n      //value and onClick\n      , {\n        value: this.state.square[i],\n        onClick: function onClick() {\n          return _this3.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status = 'Next player: X';\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Game, _React$Component3);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\my_songs\\Stuffs On Git\\react\\react-tutorial\\my-app\\src\\index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Component","Board","state","square","Array","fill","i","handleClick","status","renderSquare","Game","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;IAEMC,M;;;;;;;;;;;;;6BAEO;AAAA;;AACL,aACI;AACI,QAAA,SAAS,EAAC,QADd;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,KAAI,CAACC,KAAL,CAAWC,OAAX,EAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIK,KAAKD,KAAL,CAAWE,KAJhB,CADJ;AAQH;;;;EAXgBL,KAAK,CAACM,S;;IAcrBC,K;;;;;AAEF;;;;;;AAMA,iBAAYJ,KAAZ,EAAmB;AAAA;;AAAA;;AACf,gFAAMA,KAAN;AACA,WAAKK,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADC,KAAb;AAFe;AAKlB;;;;iCAEYC,C,EAAG;AAAA;;AACZ,aACI,oBAAC,MAAD,CACI;AACA;AAFJ;AAGI,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,MAAX,CAAkBG,CAAlB,CAHX;AAII,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACC,WAAL,CAAiBD,CAAjB,CAAN;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH;;;6BAEQ;AACL,UAAME,MAAM,GAAG,gBAAf;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBA,MAAzB,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAFJ,EAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAPJ,EAYI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAZJ,CADJ;AAoBH;;;;EAjDef,KAAK,CAACM,S;;IAoDpBU,I;;;;;;;;;;;;;6BACO;AACL,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAJJ,CADJ;AAWH;;;;EAbchB,KAAK,CAACM,S,GAgBzB;;;AAEAL,QAAQ,CAACgB,MAAT,CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EACaC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADb","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <button\r\n                className=\"square\"\r\n                onClick={() => this.props.onClick()}\r\n                >\r\n                {this.props.value}\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    /* To collect data from multiple children,\r\n    or to have two child components communicate with each other,\r\n    you need to declare the shared state in their parent component.\r\n    The parent component can pass the state back down to the children\r\n    by using props; this keeps the child components in sync with each other\r\n    and with the parent component */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            square: Array(9).fill(null)\r\n        };\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                //we’re passing down two props from Board to Square\r\n                //value and onClick\r\n                value={this.state.square[i]}\r\n                onClick={ () => this.handleClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const status = 'Next player: X';\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board/>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game/>, document.getElementById('root'));\r\n"]},"metadata":{},"sourceType":"module"}