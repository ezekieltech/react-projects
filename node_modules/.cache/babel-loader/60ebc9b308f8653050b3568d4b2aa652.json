{"ast":null,"code":"import _classCallCheck from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\my_songs\\\\Stuffs On Git\\\\react\\\\react-tutorial\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // class Square extends React.Component {\n//\n//     render() {\n//         return (\n//             <button\n//                 className=\"square\"\n//                 onClick={() => this.props.onClick()}\n//                 >\n//                 {this.props.value}\n//             </button>\n//         );\n//     }\n// }\n//function components are a simpler way to write components\n//that only contain a render method and don’t have their own state\n//Square component is a controlled components.\n//The Board has full control over it\n\nfunction Square(props) {\n  return (\n    /* When a Square is clicked,\r\n    the onClick function provided by the Board is called.\r\n    Here’s a review of how this is achieved:\r\n    1. The onClick prop on the built-in DOM <button> component\r\n    tells React to set up a click event listener.\r\n    2. When the button is clicked, React will call the onClick\r\n    event handler that is defined in Square’s render() method.\r\n    3. This event handler calls this.props.onClick().\r\n    The Square’s onClick prop was specified by the Board.\r\n    4. Since the Board passed onClick={() => this.handleClick(i)}\r\n    to Square, the Square calls this.handleClick(i) when clicked */\n    //In a class, we used an arrow function to access the correct this value,\n    //but in a function component we don’t need to worry about this.\n    React.createElement(\"button\", {\n      className: \"square\",\n      onClick: props.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, props.value)\n  );\n}\n\nvar Board =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Board, _React$Component);\n\n  /* To collect data from multiple children,\r\n  or to have two child components communicate with each other,\r\n  you need to declare the shared state in their parent component.\r\n  The parent component can pass the state back down to the children\r\n  by using props; this keeps the child components in sync with each other\r\n  and with the parent component */\n  function Board(props) {\n    var _this;\n\n    _classCallCheck(this, Board);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Board).call(this, props));\n    _this.state = {\n      square: Array(9).fill(null),\n      xIsNext: true\n    };\n    return _this;\n  }\n\n  _createClass(Board, [{\n    key: \"handleClick\",\n    value: function handleClick(i) {\n      //.slice() operator creates a copy of the squares array to modify\n      //helps you build pure components in React\n      //helps detect changes\n      //complex features becomes easy by avoiding direct data manipulation\n      var squares = this.state.square.slice();\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\n      this.setState({\n        squares: squares,\n        xIsNext: !this.state.xIsNext\n      });\n    }\n  }, {\n    key: \"renderSquare\",\n    value: function renderSquare(i) {\n      var _this2 = this;\n\n      return React.createElement(Square //we’re passing down two props from Board to Square\n      //value and onClick\n      , {\n        value: this.state.square[i],\n        onClick: function onClick() {\n          return _this2.handleClick(i);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, status), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n    }\n  }]);\n\n  return Board;\n}(React.Component);\n\nvar Game =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Game, _React$Component2);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Game).apply(this, arguments));\n  }\n\n  _createClass(Game, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"game\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"game-board\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Board, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"game-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Game;\n}(React.Component); // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 134\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:\\my_songs\\Stuffs On Git\\react\\react-tutorial\\my-app\\src\\index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","state","square","Array","fill","xIsNext","i","squares","slice","setState","handleClick","status","renderSquare","Component","Game","render","document","getElementById"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AACA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB;AAEI;;;;;;;;;;;AAYA;AACA;AACF;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,KADT;AAhBF;AAoBD;;IAEKC,K;;;;;AAEF;;;;;;AAMA,iBAAYH,KAAZ,EAAmB;AAAA;;AAAA;;AACf,+EAAMA,KAAN;AACA,UAAKI,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADC;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAFe;AAMlB;;;;gCAEWC,C,EAAG;AACX;AACA;AACA;AACA;AACA,UAAMC,OAAO,GAAG,KAAKN,KAAL,CAAWC,MAAX,CAAkBM,KAAlB,EAAhB;AACAD,MAAAA,OAAO,CAACD,CAAD,CAAP,GAAa,KAAKL,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAA0B,GAAvC;AACA,WAAKI,QAAL,CAAc;AACVF,QAAAA,OAAO,EAAEA,OADC;AAEVF,QAAAA,OAAO,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAFX,OAAd;AAMH;;;iCAEYC,C,EAAG;AAAA;;AACZ,aACI,oBAAC,MAAD,CACI;AACA;AAFJ;AAGI,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWC,MAAX,CAAkBI,CAAlB,CAHX;AAII,QAAA,OAAO,EAAG;AAAA,iBAAM,MAAI,CAACI,WAAL,CAAiBJ,CAAjB,CAAN;AAAA,SAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAQH;;;6BAEQ;AACL,UAAMK,MAAM,GAAG,mBAAmB,KAAKV,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAAyB,GAA5C,CAAf;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBM,MAAzB,CADJ,EAEI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAFJ,EAOI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAPJ,EAYI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKA,YAAL,CAAkB,CAAlB,CADL,EAEK,KAAKA,YAAL,CAAkB,CAAlB,CAFL,EAGK,KAAKA,YAAL,CAAkB,CAAlB,CAHL,CAZJ,CADJ;AAoBH;;;;EAjEelB,KAAK,CAACmB,S;;IAoEpBC,I;;;;;;;;;;;;;6BACO;AACL,aACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAJJ,CADJ;AAWH;;;;EAbcpB,KAAK,CAACmB,S,GAgBzB;;;AAEAlB,QAAQ,CAACoB,MAAT,CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EACaC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADb","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n// class Square extends React.Component {\r\n//\r\n//     render() {\r\n//         return (\r\n//             <button\r\n//                 className=\"square\"\r\n//                 onClick={() => this.props.onClick()}\r\n//                 >\r\n//                 {this.props.value}\r\n//             </button>\r\n//         );\r\n//     }\r\n// }\r\n\r\n//function components are a simpler way to write components\r\n//that only contain a render method and don’t have their own state\r\n\r\n//Square component is a controlled components.\r\n//The Board has full control over it\r\nfunction Square(props) {\r\n  return (\r\n\r\n      /* When a Square is clicked,\r\n      the onClick function provided by the Board is called.\r\n      Here’s a review of how this is achieved:\r\n      1. The onClick prop on the built-in DOM <button> component\r\n      tells React to set up a click event listener.\r\n      2. When the button is clicked, React will call the onClick\r\n      event handler that is defined in Square’s render() method.\r\n      3. This event handler calls this.props.onClick().\r\n      The Square’s onClick prop was specified by the Board.\r\n      4. Since the Board passed onClick={() => this.handleClick(i)}\r\n      to Square, the Square calls this.handleClick(i) when clicked */\r\n\r\n      //In a class, we used an arrow function to access the correct this value,\r\n      //but in a function component we don’t need to worry about this.\r\n    <button className=\"square\" onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nclass Board extends React.Component {\r\n\r\n    /* To collect data from multiple children,\r\n    or to have two child components communicate with each other,\r\n    you need to declare the shared state in their parent component.\r\n    The parent component can pass the state back down to the children\r\n    by using props; this keeps the child components in sync with each other\r\n    and with the parent component */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            square: Array(9).fill(null),\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        //.slice() operator creates a copy of the squares array to modify\r\n        //helps you build pure components in React\r\n        //helps detect changes\r\n        //complex features becomes easy by avoiding direct data manipulation\r\n        const squares = this.state.square.slice();\r\n        squares[i] = this.state.xIsNext ? 'X': 'O';\r\n        this.setState({\r\n            squares: squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n\r\n\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                //we’re passing down two props from Board to Square\r\n                //value and onClick\r\n                value={this.state.square[i]}\r\n                onClick={ () => this.handleClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const status = 'Next player: ' + (this.state.xIsNext ? 'X':'O');\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"status\">{status}</div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board/>\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{/* status */}</div>\r\n                    <ol>{/* TODO */}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game/>, document.getElementById('root'));\r\n"]},"metadata":{},"sourceType":"module"}